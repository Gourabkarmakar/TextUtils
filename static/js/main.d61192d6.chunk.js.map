{"version":3,"sources":["component/Navbar.js","component/Textutil.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","onClick","toogleMode","htmlFor","Textutil","useState","text","setText","heading","rows","value","onChange","event","target","console","log","newText","toUpperCase","toLowerCase","split","filter","element","length","App","setMode","document","body","style","backgroundColor","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wMA+CeA,EA7CA,SAACC,GACd,OACE,mCACE,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACE,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,uBAGA,wBACEF,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMH,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BI,GAAG,yBAA7C,UACE,oBAAIJ,UAAU,oCAId,sBAAKA,UAAS,sCAAgD,UAAfD,EAAME,KAAkB,OAAS,SAAhF,UAEE,uBACED,UAAU,mBACVG,KAAK,WACLC,GAAG,yBACHC,QAASN,EAAMO,aAEjB,uBAAON,UAAU,mBAAmBO,QAAQ,yBAA5C,gCC0CCC,EA1EE,SAACT,GAChB,MAAwBU,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA2BA,OACE,qCACE,sBAAKX,UAAU,kDAAf,UACE,6BAAKD,EAAMa,UACX,qBAAKZ,UAAU,OAAf,SACE,0BACEA,UAAU,eACVI,GAAG,QACHS,KAAK,IACLC,MAAOJ,EACPK,SAda,SAACC,GACtBL,EAAQK,EAAMC,OAAOH,YAmBjB,wBAAQd,UAAU,kBAAkBK,QAzCtB,WAClBa,QAAQC,IAAI,kBACZ,IAAIC,EAAUV,EAAKW,cACnBV,EAAQS,IAsCJ,mCAIA,wBAAQpB,UAAU,uBAAuBK,QArC1B,WAEnB,IAAIe,EAAUV,EAAKY,cACnBX,EAAQS,IAkCJ,mCAIA,wBAAQpB,UAAU,kBAAkBK,QAhCxB,WAChBM,EAAQ,KA+BJ,2BAKF,sBAAKX,UAAU,sCAAf,UAEE,uCACSU,EAAKa,MAAM,KAAKC,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQC,UAAaA,OADxE,cAC2FhB,EAAKgB,OADhG,iBAGA,8BAAI,KAAShB,EAAKa,MAAM,KAAKG,OAA7B,sBAIF,sBAAK1B,UAAU,kDAAf,UACE,8CACA,4BAAIU,EAAKgB,OAAO,EAAEhB,EAAK,8CCtChBiB,MA1Bf,WACE,MAAwBlB,mBAAS,SAAjC,mBAAOR,EAAP,KAAa2B,EAAb,KAcA,OACE,qCACE,cAAC,EAAD,CAAQ3B,KAAMA,EAAMK,WAdL,WACJ,UAATL,GACF2B,EAAQ,QACRC,SAASC,KAAKC,MAAMC,gBAAkB,OACtCH,SAASI,MAAQ,qBAEjBL,EAAQ,SACRC,SAASC,KAAKC,MAAMC,gBAAkB,QACtCH,SAASI,MAAQ,wBAOjB,qBAAKjC,UAAU,YAAf,SACE,cAAC,EAAD,CAAUY,QAAQ,mBAAoBX,KAAMA,UCbrCiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASiB,eAAe,SAM1BZ,K","file":"static/js/main.d61192d6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = (props) => {\n  return (\n    <>\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand\" href=\"#\">\n            TextUtils\n          </a>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              \n            </ul>\n\n            <div className={`form-check form-switch text-${props.mode === 'light'? 'dark' : 'light'}`}>\n              {/* {`form-check form-switch text-${props.mode=== ‘light’? ‘Dark’ : ‘light’}`} */}\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                onClick={props.toogleMode}\n              />\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n                Mode\n              </label>\n           </div>\n           \n          </div>\n         \n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\n\nconst Textutil = (props) => {\n  const [text, setText] = useState('');\n\n  const handelinput = () => {\n    console.log(\"Button Clicked\");\n    let newText = text.toUpperCase();\n    setText(newText);\n\n    // Use for\n    // setText(\"You Press The button\");\n  };\n  const handeToLower = () => {\n    // console.log(\"Button Clicked\");\n    let newText = text.toLowerCase();\n    setText(newText);\n\n    // Use for\n    // setText(\"You Press The button\");\n  };\n\n  const clearText = () =>{\n    setText('')\n  }\n\n  const handelonchange = (event) => {\n    setText(event.target.value);\n  };\n\n  return (\n    <>\n      <div className=\"container my-2 shadow p-3 mb-5 bg-white rounded\">\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            id=\"mybox\"\n            rows=\"8\"\n            value={text}\n            onChange={handelonchange}\n          >\n            \n          </textarea>\n        </div>\n\n        <button className=\"btn btn-primary\" onClick={handelinput}>\n          Convert To Upper case\n        </button>\n        \n        <button className=\"btn btn-primary mx-2\" onClick={handeToLower}>\n          Convert To Lower case\n        </button>\n        \n        <button className=\"btn btn-primary\" onClick={clearText}>\n          Clear Text\n        </button>\n      </div>\n\n      <div className=\"shadow-lg p-3 mb-5 bg-white rounded\">\n\n        <p>\n          Total {text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} Characters\n        </p>\n        <p>{0.008 *  text.split(\" \").length} Minutes read</p>\n      \n      </div>\n\n      <div className=\"container my-3 shadow p-3 mb-5 bg-white rounded\">\n        <h2>Preview Text</h2>\n        <p>{text.length>0?text:'Enter Your Text Into Textbox .....'}</p>\n      </div>\n    </>\n  );\n};\n\nexport default Textutil;\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./component/Navbar\";\nimport Textutil from \"./component/Textutil\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n\n  const toogleMode = () =>{\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = 'gray'\n      document.title = 'TextUtils - Dark'\n    } else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      document.title = 'TextUtils - Light'\n    }\n  }\n\n  return (\n    <>\n      <Navbar mode={mode} toogleMode={toogleMode}/>\n      <div className=\"container\">\n        <Textutil heading=\"Enter The Text :\"  mode={mode}/>\n      </div>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}